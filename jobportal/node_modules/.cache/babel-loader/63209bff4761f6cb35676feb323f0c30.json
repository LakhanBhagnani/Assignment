{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\Assignment\\\\jobportal\\\\src\\\\pages\\\\CandidateHome.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport NavBar from \"../component/NavBar\";\nimport ReactPaginate from \"react-paginate\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CandidateHome = () => {\n  _s();\n\n  const [jobs, setJobs] = useState({});\n  const [hasApplied, setApplied] = useState(false);\n  const [userdetails, setUserdetails] = useState(JSON.parse(localStorage.getItem(\"UserDetails\")));\n  const [isLoggedin, setLogg] = useState(localStorage.getItem(\"token\") == null ? false : true);\n  const [pageNumber, setPagenumber] = useState(0);\n  const Jobsperpage = 2;\n  const pageVisited = pageNumber * Jobsperpage;\n  const pageCount = Math.ceil(jobs.length / Jobsperpage);\n\n  const changePage = ({\n    selected\n  }) => {\n    setPagenumber(selected);\n  };\n\n  const ApplyNow = value => {\n    let userId = userdetails.CANDIDATE_ID;\n    let appliedDate = new Date();\n    let obj = {\n      value,\n      userId,\n      appliedDate\n    };\n    axios.post(\"http://localhost:3001/api/applyNow/\", obj).then(response => {\n      if (response) {\n        console.log(response);\n        setApplied(true);\n      }\n    });\n  };\n\n  const displayJobs = Object.entries(jobs).slice(pageVisited, pageVisited + Jobsperpage).map((job, index) => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-2 bg-light border-dark\",\n        id: job[1].JOB_ID,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-1\",\n            children: job[1].JobRole\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-1 mr-auto\",\n            children: [\"(\", job[1].JobType, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-1\",\n            children: [job[1].CompanyName, \",\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-1\",\n            children: job[1].JobLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex p-2\",\n          children: [\"Job Description: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 32\n          }, this), job[1].JobDescription]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex p-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-3 p-1\",\n              children: \"Experience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-2 p-1\",\n              children: [job[1].RequiredExperience, \"+\", parseInt(job[1].RequiredExperience) > 1 ? \" Years\" : \" Year\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-row mr-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-2 p-1\",\n              children: \"Qualification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-3 p-1\",\n              children: job[1].RequiredQualification\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-2 p-2\",\n              children: \"Job Posted on\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-3 p-1\",\n              children: [new Date(job[1].PostingDate).getDate(), \"/\", new Date(job[1].PostingDate).getMonth() + 1, \"/\", new Date(job[1].PostingDate).getFullYear()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), isApplied ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"order-4 btn btn-info btn-sm float-right\",\n            \"data-dismiss\": \"alert\",\n            onClick: () => ApplyNow(job[1].JOB_ID),\n            children: \"Apply Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"order-4 btn btn-success btn-sm float-right\",\n            \"data-dismiss\": \"alert\",\n            onClick: () => ApplyNow(job[1].JOB_ID),\n            children: \"Apply Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, job[1].JOB_ID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this);\n  });\n\n  const loadData = () => {\n    fetch(\"http://localhost:3001/api/Alljobs\").then(response => response.json()).then(data => {\n      setJobs(data.recordset);\n    });\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  if (hasApplied) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/jobsApplied\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (isLoggedin) {\n    if (localStorage.getItem(\"type\") == \"Company\") return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/CompanyHome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }, this);\n  } else if (!isLoggedin) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 10\n    }, this);\n  }\n\n  const distinctQualifications = Object.entries(jobs).map(function (x) {\n    return x[1].RequiredQualification;\n  }).filter(function test(val, ind, self) {\n    return self.indexOf(val) === ind;\n  });\n  const QualificationRender = distinctQualifications.map(Qualification => {\n    return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n      onClick: () => QualificationFilter(Qualification),\n      children: Qualification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 4\n    }, this);\n  });\n\n  const QualificationFilter = RequiredQualification => {\n    let filtered = jobs.filter(e => {\n      return e.RequiredQualification == RequiredQualification;\n    });\n    setJobs(filtered);\n  };\n\n  const distinctLocations = Object.entries(jobs).map(function (x) {\n    return x[1].JobLocation;\n  }).filter(function test(val, ind, self) {\n    return self.indexOf(val) === ind;\n  });\n  const LocationRender = distinctLocations.map(JobLocation => {\n    return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n      onClick: () => JobLocationFilter(JobLocation),\n      children: JobLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 4\n    }, this);\n  });\n\n  const JobLocationFilter = JobLocation => {\n    let filtered = jobs.filter(e => {\n      return e.JobLocation == JobLocation;\n    });\n    setJobs(filtered);\n  };\n\n  const DistinctJobType = Object.entries(jobs).map(function (x) {\n    return x[1].JobType;\n  }).filter(function test(val, ind, self) {\n    return self.indexOf(val) === ind;\n  });\n  const JobTypeRender = DistinctJobType.map(JobType => {\n    return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n      onClick: () => JobTypeFilter(JobType),\n      children: JobType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 4\n    }, this);\n  });\n\n  const JobTypeFilter = JobType => {\n    let filtered = jobs.filter(e => {\n      return e.JobType == JobType;\n    });\n    setJobs(filtered);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"filters d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Qualification\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: () => loadData(),\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 6\n        }, this), QualificationRender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Location\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: () => loadData(),\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 6\n        }, this), LocationRender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Job Type\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: () => loadData(),\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 6\n        }, this), JobTypeRender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      type: \"none\",\n      children: displayJobs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: \"Previous\",\n      nextLabel: \"Next\",\n      pageCount: pageCount,\n      onPageChange: changePage,\n      containerClassName: \"paginationBttns\",\n      previousLinkClassName: \"previousBttn\",\n      nextLinkClassName: \"nextBttn\",\n      disabledClassName: \"paginationDisabled\",\n      activeClassName: \"paginationActive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CandidateHome, \"iPHmY0DXZ0TAey29Vl8kc+lLel4=\");\n\n_c = CandidateHome;\nexport default CandidateHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"CandidateHome\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/GitHub/Assignment/jobportal/src/pages/CandidateHome.jsx"],"names":["axios","React","Component","useEffect","useState","Redirect","NavBar","ReactPaginate","DropdownButton","Dropdown","CandidateHome","jobs","setJobs","hasApplied","setApplied","userdetails","setUserdetails","JSON","parse","localStorage","getItem","isLoggedin","setLogg","pageNumber","setPagenumber","Jobsperpage","pageVisited","pageCount","Math","ceil","length","changePage","selected","ApplyNow","value","userId","CANDIDATE_ID","appliedDate","Date","obj","post","then","response","console","log","displayJobs","Object","entries","slice","map","job","index","JOB_ID","JobRole","JobType","CompanyName","JobLocation","JobDescription","RequiredExperience","parseInt","RequiredQualification","PostingDate","getDate","getMonth","getFullYear","isApplied","loadData","fetch","json","data","recordset","distinctQualifications","x","filter","test","val","ind","self","indexOf","QualificationRender","Qualification","QualificationFilter","filtered","e","distinctLocations","LocationRender","JobLocationFilter","DistinctJobType","JobTypeRender","JobTypeFilter"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { Component, useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport NavBar from \"../component/NavBar\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nconst CandidateHome = () => {\r\n\tconst [jobs, setJobs] = useState({});\r\n\tconst [hasApplied, setApplied] = useState(false);\r\n\tconst [userdetails, setUserdetails] = useState(\r\n\t\tJSON.parse(localStorage.getItem(\"UserDetails\"))\r\n\t);\r\n\tconst [isLoggedin, setLogg] = useState(\r\n\t\tlocalStorage.getItem(\"token\") == null ? false : true\r\n\t);\r\n\tconst [pageNumber, setPagenumber] = useState(0);\r\n\tconst Jobsperpage = 2;\r\n\tconst pageVisited = pageNumber * Jobsperpage;\r\n\tconst pageCount = Math.ceil(jobs.length / Jobsperpage);\r\n\r\n\tconst changePage = ({ selected }) => {\r\n\t\tsetPagenumber(selected);\r\n\t};\r\n\tconst ApplyNow = (value) => {\r\n\t\tlet userId = userdetails.CANDIDATE_ID;\r\n\t\tlet appliedDate = new Date();\r\n\t\tlet obj = {\r\n\t\t\tvalue,\r\n\t\t\tuserId,\r\n\t\t\tappliedDate,\r\n\t\t};\r\n\t\taxios.post(\"http://localhost:3001/api/applyNow/\", obj).then((response) => {\r\n\t\t\tif (response) {\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t\tsetApplied(true);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\tconst displayJobs = Object.entries(jobs)\r\n\t\t.slice(pageVisited, pageVisited + Jobsperpage)\r\n\t\t.map((job, index) => {\r\n\t\t\treturn (\r\n        <li>\r\n          <div\r\n            className='container mt-2 bg-light border-dark'\r\n            id={job[1].JOB_ID}\r\n            key={job[1].JOB_ID}\r\n          >\r\n            <div className='d-flex '>\r\n              <div className='p-1'>{job[1].JobRole}</div>\r\n              <div className='p-1 mr-auto'>({job[1].JobType})</div>\r\n              <div className='p-1'>{job[1].CompanyName},</div>\r\n              <div className='p-1'>{job[1].JobLocation}</div>\r\n            </div>\r\n            <div className='d-flex p-2'>\r\n              Job Description: <br />\r\n              {job[1].JobDescription}\r\n            </div>\r\n            <div className='d-flex p-1'>\r\n              <div className='flex-row'>\r\n                <div className='order-3 p-1'>Experience</div>\r\n                <div className='order-2 p-1'>\r\n                  {job[1].RequiredExperience}+\r\n                  {parseInt(job[1].RequiredExperience) > 1 ? \" Years\" : \" Year\"}\r\n                </div>\r\n              </div>\r\n              <div className='flex-row mr-auto'>\r\n                <div className='order-2 p-1'>Qualification</div>\r\n                <div className='order-3 p-1'>\r\n                  {job[1].RequiredQualification}\r\n                </div>\r\n              </div>\r\n              <div className='flex-row'>\r\n                <div className='order-2 p-2'>Job Posted on</div>\r\n                <div className='order-3 p-1'>\r\n                  {new Date(job[1].PostingDate).getDate()}/\r\n                  {new Date(job[1].PostingDate).getMonth() + 1}/\r\n                  {new Date(job[1].PostingDate).getFullYear()}\r\n                </div>\r\n              </div>\r\n              {isApplied ? (\r\n                <button\r\n                  type='button'\r\n                  class='order-4 btn btn-info btn-sm float-right'\r\n                  data-dismiss='alert'\r\n                  onClick={() => ApplyNow(job[1].JOB_ID)}\r\n                >\r\n                  Apply Now\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  type='button'\r\n                  class='order-4 btn btn-success btn-sm float-right'\r\n                  data-dismiss='alert'\r\n                  onClick={() => ApplyNow(job[1].JOB_ID)}\r\n                >\r\n                  Apply Now\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </li>\r\n      );\r\n\t\t});\r\n\tconst loadData = () => {\r\n\t\tfetch(\"http://localhost:3001/api/Alljobs\")\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetJobs(data.recordset);\r\n\t\t\t});\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tloadData();\r\n\t}, []);\r\n\r\n\tif (hasApplied) {\r\n\t\treturn <Redirect to='/jobsApplied' />;\r\n\t}\r\n\tif (isLoggedin) {\r\n\t\tif (localStorage.getItem(\"type\") == \"Company\")\r\n\t\t\treturn <Redirect to='/CompanyHome' />;\r\n\t} else if (!isLoggedin) {\r\n\t\treturn <Redirect to='/Login'></Redirect>;\r\n\t}\r\n\tconst distinctQualifications = Object.entries(jobs)\r\n\t\t.map(function (x) {\r\n\t\t\treturn x[1].RequiredQualification;\r\n\t\t})\r\n\t\t.filter(function test(val, ind, self) {\r\n\t\t\treturn self.indexOf(val) === ind;\r\n\t\t});\r\n\r\n\tconst QualificationRender = distinctQualifications.map((Qualification) => {\r\n\t\treturn (\r\n\t\t\t<Dropdown.Item onClick={() => QualificationFilter(Qualification)}>\r\n\t\t\t\t{Qualification}\r\n\t\t\t</Dropdown.Item>\r\n\t\t);\r\n\t});\r\n\tconst QualificationFilter = (RequiredQualification) => {\r\n\t\tlet filtered = jobs.filter((e) => {\r\n\t\t\treturn e.RequiredQualification == RequiredQualification;\r\n\t\t});\r\n\t\tsetJobs(filtered);\r\n\t};\r\n\tconst distinctLocations = Object.entries(jobs)\r\n\t\t.map(function (x) {\r\n\t\t\treturn x[1].JobLocation;\r\n\t\t})\r\n\t\t.filter(function test(val, ind, self) {\r\n\t\t\treturn self.indexOf(val) === ind;\r\n\t\t});\r\n\tconst LocationRender = distinctLocations.map((JobLocation) => {\r\n\t\treturn (\r\n\t\t\t<Dropdown.Item onClick={() => JobLocationFilter(JobLocation)}>\r\n\t\t\t\t{JobLocation}\r\n\t\t\t</Dropdown.Item>\r\n\t\t);\r\n\t});\r\n\tconst JobLocationFilter = (JobLocation) => {\r\n\t\tlet filtered = jobs.filter((e) => {\r\n\t\t\treturn e.JobLocation == JobLocation;\r\n\t\t});\r\n\t\tsetJobs(filtered);\r\n\t};\r\n\r\n\tconst DistinctJobType = Object.entries(jobs)\r\n\t\t.map(function (x) {\r\n\t\t\treturn x[1].JobType;\r\n\t\t})\r\n\t\t.filter(function test(val, ind, self) {\r\n\t\t\treturn self.indexOf(val) === ind;\r\n\t\t});\r\n\tconst JobTypeRender = DistinctJobType.map((JobType) => {\r\n\t\treturn (\r\n\t\t\t<Dropdown.Item onClick={() => JobTypeFilter(JobType)}>\r\n\t\t\t\t{JobType}\r\n\t\t\t</Dropdown.Item>\r\n\t\t);\r\n\t});\r\n\tconst JobTypeFilter = (JobType) => {\r\n\t\tlet filtered = jobs.filter((e) => {\r\n\t\t\treturn e.JobType == JobType;\r\n\t\t});\r\n\t\tsetJobs(filtered);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<NavBar />\r\n\t\t\t<div class='filters d-flex'>\r\n\t\t\t\t<DropdownButton id='dropdown-basic-button' title='Qualification'>\r\n\t\t\t\t\t<Dropdown.Item onClick={() => loadData()}>All</Dropdown.Item>\r\n\t\t\t\t\t{QualificationRender}\r\n\t\t\t\t</DropdownButton>\r\n\t\t\t\t<DropdownButton id='dropdown-basic-button' title='Location'>\r\n\t\t\t\t\t<Dropdown.Item onClick={() => loadData()}>All</Dropdown.Item>\r\n\t\t\t\t\t{LocationRender}\r\n\t\t\t\t</DropdownButton>\r\n\t\t\t\t<DropdownButton id='dropdown-basic-button' title='Job Type'>\r\n\t\t\t\t\t<Dropdown.Item onClick={() => loadData()}>All</Dropdown.Item>\r\n\t\t\t\t\t{JobTypeRender}\r\n\t\t\t\t</DropdownButton>\r\n\t\t\t</div>\r\n\r\n\t\t\t<ul type='none'>{displayJobs}</ul>\r\n\r\n\t\t\t<ReactPaginate\r\n\t\t\t\tpreviousLabel={\"Previous\"}\r\n\t\t\t\tnextLabel={\"Next\"}\r\n\t\t\t\tpageCount={pageCount}\r\n\t\t\t\tonPageChange={changePage}\r\n\t\t\t\tcontainerClassName={\"paginationBttns\"}\r\n\t\t\t\tpreviousLinkClassName={\"previousBttn\"}\r\n\t\t\t\tnextLinkClassName={\"nextBttn\"}\r\n\t\t\t\tdisabledClassName={\"paginationDisabled\"}\r\n\t\t\t\tactiveClassName={\"paginationActive\"}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CandidateHome;\r\n"]},"metadata":{},"sourceType":"module"}