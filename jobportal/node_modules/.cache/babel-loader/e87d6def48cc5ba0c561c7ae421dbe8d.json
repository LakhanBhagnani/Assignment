{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\Assignment\\\\jobportal\\\\src\\\\pages\\\\AppliedJobs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport ReactPaginate from \"react-paginate\";\nimport { Redirect } from \"react-router-dom\";\nimport NavBar from \"../component/NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppliedJobs = () => {\n  _s();\n\n  const [jobs, setJobs] = useState({});\n  const [userdetails] = useState(JSON.parse(localStorage.getItem(\"UserDetails\")));\n  const [isLoggedin] = useState(localStorage.getItem(\"token\") == null ? false : true);\n\n  const changePage = ({\n    selected\n  }) => {\n    setPagenumber(selected);\n  };\n\n  const loadData = () => {\n    const user = userdetails.Username;\n    fetch(\"http://localhost:3001/api/getAJ/\" + user).then(response => response.json()).then(data => {\n      setJobs(data.recordset);\n    });\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  const [pageNumber, setPagenumber] = useState(0);\n  const Jobsperpage = 10;\n  const pageVisited = pageNumber * Jobsperpage;\n  const pageCount = Math.ceil(jobs.length / Jobsperpage);\n  const displayJobs = Object.entries(jobs).slice(pageVisited, pageVisited + Jobsperpage).map((job, index) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"row\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: job[1].CompanyName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: job[1].JobRole\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: job[1].JobType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [new Date(job[1].PostingDate).getDate(), \"/\", new Date(job[1].PostingDate).getMonth() + 1, \"/\", new Date(job[1].PostingDate).getFullYear()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [new Date(job[1].AppliedDate).getDate(), \"/\", new Date(job[1].AppliedDate).getMonth() + 1, \"/\", new Date(job[1].AppliedDate).getFullYear()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: job[1].JobStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this);\n  });\n\n  if (isLoggedin) {\n    if (localStorage.getItem(\"type\") === \"Company\") return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/CompanyHome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this);\n  } else if (!isLoggedin) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }, this);\n  }\n\n  const DistinctStatus = Object.entries(jobs).map(function (x) {\n    return x[1].JobStatus;\n  }).filter(function test(val, ind, self) {\n    return self.indexOf(val) === ind;\n  });\n  const JobStatusRender = DistinctStatus.map(JobStatus => {\n    return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n      onClick: () => JobStatusFilter(JobStatus),\n      children: JobStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this);\n  });\n\n  const JobStatusFilter = JobStatus => {\n    let filtered = jobs.filter(e => {\n      debugger;\n      return e.JobStatus === JobStatus;\n    });\n    setJobs(filtered);\n  };\n\n  const sortbyDate = type => {\n    let sortedJobs = [...jobs];\n    sortedJobs.sort(function (a, b) {\n      if (type === \"desc\") return new Date(b.AppliedDate) - new Date(a.AppliedDate);else return new Date(a.AppliedDate) - new Date(b.AppliedDate);\n    });\n    setJobs(sortedJobs);\n    console.log(sortedJobs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"filters d-flex\",\n      children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: \"Status\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: () => loadData(),\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this), JobStatusRender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table table-hover\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Job Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Company Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Job Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Posted Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: [\"Applied Date \\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: () => sortbyDate(\"desc\"),\n              href: \"#\",\n              \"data-toggle\": \"tooltip\",\n              title: \"Most Recent Applied first\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"16\",\n                height: \"16\",\n                fill: \"currentColor\",\n                class: \"bi bi-arrow-up\",\n                viewBox: \"0 0 16 16\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  \"fill-rule\": \"evenodd\",\n                  d: \"M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 8\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: () => sortbyDate(\"asc\"),\n              \"data-toggle\": \"tooltip\",\n              title: \"Least Recent Applied first\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"16\",\n                height: \"16\",\n                fill: \"currentColor\",\n                class: \"bi bi-arrow-down\",\n                viewBox: \"0 0 16 16\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  \"fill-rule\": \"evenodd\",\n                  d: \"M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: displayJobs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: \"Previous\",\n      nextLabel: \"Next\",\n      pageCount: pageCount,\n      onPageChange: changePage,\n      containerClassName: \"paginationBttns\",\n      previousLinkClassName: \"previousBttn\",\n      nextLinkClassName: \"nextBttn\",\n      disabledClassName: \"paginationDisabled\",\n      activeClassName: \"paginationActive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AppliedJobs, \"3kjTtXf1DTGu0VsLhaahMP3JHoU=\");\n\n_c = AppliedJobs;\nexport default AppliedJobs;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppliedJobs\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/GitHub/Assignment/jobportal/src/pages/AppliedJobs.jsx"],"names":["React","useEffect","useState","Dropdown","DropdownButton","ReactPaginate","Redirect","NavBar","AppliedJobs","jobs","setJobs","userdetails","JSON","parse","localStorage","getItem","isLoggedin","changePage","selected","setPagenumber","loadData","user","Username","fetch","then","response","json","data","recordset","pageNumber","Jobsperpage","pageVisited","pageCount","Math","ceil","length","displayJobs","Object","entries","slice","map","job","index","CompanyName","JobRole","JobType","Date","PostingDate","getDate","getMonth","getFullYear","AppliedDate","JobStatus","DistinctStatus","x","filter","test","val","ind","self","indexOf","JobStatusRender","JobStatusFilter","filtered","e","sortbyDate","type","sortedJobs","sort","a","b","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport NavBar from \"../component/NavBar\";\r\nconst AppliedJobs = () => {\r\n\tconst [jobs, setJobs] = useState({});\r\n\tconst [userdetails] = useState(\r\n\t\tJSON.parse(localStorage.getItem(\"UserDetails\"))\r\n\t);\r\n\tconst [isLoggedin] = useState(\r\n\t\tlocalStorage.getItem(\"token\") == null ? false : true\r\n\t);\r\n\r\n\tconst changePage = ({ selected }) => {\r\n\t\tsetPagenumber(selected);\r\n\t};\r\n\tconst loadData = () => {\r\n\t\tconst user = userdetails.Username;\r\n\t\tfetch(\"http://localhost:3001/api/getAJ/\" + user)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetJobs(data.recordset);\r\n\t\t\t});\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tloadData();\r\n\t}, []);\r\n\tconst [pageNumber, setPagenumber] = useState(0);\r\n\tconst Jobsperpage = 10;\r\n\tconst pageVisited = pageNumber * Jobsperpage;\r\n\tconst pageCount = Math.ceil(jobs.length / Jobsperpage);\r\n\r\n\tconst displayJobs = Object.entries(jobs)\r\n\t\t.slice(pageVisited, pageVisited + Jobsperpage)\r\n\t\t.map((job, index) => {\r\n\t\t\treturn (\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th scope='row'>{index + 1}</th>\r\n\t\t\t\t\t<td>{job[1].CompanyName}</td>\r\n\t\t\t\t\t<td>{job[1].JobRole}</td>\r\n\t\t\t\t\t<td>{job[1].JobType}</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t{new Date(job[1].PostingDate).getDate()}/\r\n\t\t\t\t\t\t{new Date(job[1].PostingDate).getMonth() + 1}/\r\n\t\t\t\t\t\t{new Date(job[1].PostingDate).getFullYear()}\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t{new Date(job[1].AppliedDate).getDate()}/\r\n\t\t\t\t\t\t{new Date(job[1].AppliedDate).getMonth() + 1}/\r\n\t\t\t\t\t\t{new Date(job[1].AppliedDate).getFullYear()}\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>{job[1].JobStatus}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\tif (isLoggedin) {\r\n\t\tif (localStorage.getItem(\"type\") === \"Company\")\r\n\t\t\treturn <Redirect to='/CompanyHome' />;\r\n\t} else if (!isLoggedin) {\r\n\t\treturn <Redirect to='/Login'></Redirect>;\r\n\t}\r\n\tconst DistinctStatus = Object.entries(jobs)\r\n\t\t.map(function (x) {\r\n\t\t\treturn x[1].JobStatus;\r\n\t\t})\r\n\t\t.filter(function test(val, ind, self) {\r\n\t\t\treturn self.indexOf(val) === ind;\r\n\t\t});\r\n\tconst JobStatusRender = DistinctStatus.map((JobStatus) => {\r\n\t\treturn (\r\n\t\t\t<Dropdown.Item onClick={() => JobStatusFilter(JobStatus)}>\r\n\t\t\t\t{JobStatus}\r\n\t\t\t</Dropdown.Item>\r\n\t\t);\r\n\t});\r\n\tconst JobStatusFilter = (JobStatus) => {\r\n\t\tlet filtered = jobs.filter((e) => {\r\n\t\t\tdebugger;\r\n\t\t\treturn e.JobStatus === JobStatus;\r\n\t\t});\r\n\r\n\t\tsetJobs(filtered);\r\n\t};\r\n\tconst sortbyDate = (type) => {\r\n\t\tlet sortedJobs = [...jobs];\r\n\t\tsortedJobs.sort(function (a, b) {\r\n\t\t\tif (type === \"desc\")\r\n\t\t\t\treturn new Date(b.AppliedDate) - new Date(a.AppliedDate);\r\n\t\t\telse return new Date(a.AppliedDate) - new Date(b.AppliedDate);\r\n\t\t});\r\n\t\tsetJobs(sortedJobs);\r\n\t\tconsole.log(sortedJobs);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<NavBar />\r\n\t\t\t<div class='filters d-flex'>\r\n\t\t\t\t<DropdownButton id='dropdown-basic-button' title='Status'>\r\n\t\t\t\t\t<Dropdown.Item onClick={() => loadData()}>All</Dropdown.Item>\r\n\t\t\t\t\t{JobStatusRender}\r\n\t\t\t\t</DropdownButton>\r\n\t\t\t</div>\r\n\t\t\t<br />\r\n\t\t\t<table class='table table-hover'>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th scope='col'>#</th>\r\n\t\t\t\t\t\t<th scope='col'>Job Profile</th>\r\n\t\t\t\t\t\t<th scope='col'>Company Name</th>\r\n\t\t\t\t\t\t<th scope='col'>Job Type</th>\r\n\t\t\t\t\t\t<th scope='col'>Posted Date</th>\r\n\t\t\t\t\t\t<th scope='col'>\r\n\t\t\t\t\t\t\tApplied Date &nbsp;\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\tonClick={() => sortbyDate(\"desc\")}\r\n\t\t\t\t\t\t\t\thref=\"#\"\r\n\t\t\t\t\t\t\t\tdata-toggle='tooltip'\r\n\t\t\t\t\t\t\t\ttitle='Most Recent Applied first'>\r\n\t\t\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\t\t\t\t\t\t\twidth='16'\r\n\t\t\t\t\t\t\t\t\theight='16'\r\n\t\t\t\t\t\t\t\t\tfill='currentColor'\r\n\t\t\t\t\t\t\t\t\tclass='bi bi-arrow-up'\r\n\t\t\t\t\t\t\t\t\tviewBox='0 0 16 16'>\r\n\t\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\t\tfill-rule='evenodd'\r\n\t\t\t\t\t\t\t\t\t\td='M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\tonClick={() => sortbyDate(\"asc\")}\r\n\t\t\t\t\t\t\t\tdata-toggle='tooltip'\r\n\t\t\t\t\t\t\t\ttitle='Least Recent Applied first'>\r\n\t\t\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\t\t\t\t\t\t\twidth='16'\r\n\t\t\t\t\t\t\t\t\theight='16'\r\n\t\t\t\t\t\t\t\t\tfill='currentColor'\r\n\t\t\t\t\t\t\t\t\tclass='bi bi-arrow-down'\r\n\t\t\t\t\t\t\t\t\tviewBox='0 0 16 16'>\r\n\t\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\t\tfill-rule='evenodd'\r\n\t\t\t\t\t\t\t\t\t\td='M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</th>\r\n\r\n\t\t\t\t\t\t<th scope='col'>Status</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>{displayJobs}</tbody>\r\n\t\t\t</table>\r\n\t\t\t<ReactPaginate\r\n\t\t\t\tpreviousLabel={\"Previous\"}\r\n\t\t\t\tnextLabel={\"Next\"}\r\n\t\t\t\tpageCount={pageCount}\r\n\t\t\t\tonPageChange={changePage}\r\n\t\t\t\tcontainerClassName={\"paginationBttns\"}\r\n\t\t\t\tpreviousLinkClassName={\"previousBttn\"}\r\n\t\t\t\tnextLinkClassName={\"nextBttn\"}\r\n\t\t\t\tdisabledClassName={\"paginationDisabled\"}\r\n\t\t\t\tactiveClassName={\"paginationActive\"}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AppliedJobs;\r\n"]},"metadata":{},"sourceType":"module"}